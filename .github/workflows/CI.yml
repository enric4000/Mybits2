
name: Django CI with Docker

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build_and_run:
    runs-on: ubuntu-latest

    env:
      # Definimos las variables de entorno aquí
      DB_NAME: mybits2db
      USER: mybits2admin
      PASSWORD: x7v,85W*DOMB3fJT
      HOST: db
      PORT: 5432

    steps:
    - name: Set up Docker Compose
      run: |
        # Instalar Docker Compose
        sudo apt-get update
        sudo apt-get install -y docker-compose
        sudo apt-get install -y python3
        
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-
    - name: Build Docker images
      run: |
        docker-compose -f docker-compose.yml down --remove-orphans  # Limpia contenedores huérfanos
        docker-compose -f docker-compose.yml build
    - name: Build and run Django app in Docker container
      run: |
        docker-compose -f docker-compose.yml up -d db
        sleep 5
        docker-compose -f docker-compose.yml up -d web
        sleep 10
        
        docker-compose -f docker-compose.yml up test
        docker-compose -f docker-compose.yml logs test
        
        EXIT_CODE=$(docker inspect --format='{{.State.ExitCode}}' $(docker-compose -f docker-compose.yml ps -q test))
        if [ "$EXIT_CODE" -ne 0 ]; then
          echo "Tests failed! Exit code: $EXIT_CODE"; exit 1;
        else
          echo "Tests passed!"
        fi
        docker-compose down
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./coverage_reports/
